const fs = require('fs');
const path = require('path');

// –ß–∏—Ç–∞–µ–º models.json
const modelsPath = path.join(__dirname, 'src/data/models.json');
const models = JSON.parse(fs.readFileSync(modelsPath, 'utf8'));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç–µ–π
function fixPaths(obj) {
  if (typeof obj === 'string') {
    // –ó–∞–º–µ–Ω—è–µ–º /src/assets/ –Ω–∞ ./src/assets/
    return obj.replace(/^\/src\/assets\//, './src/assets/');
  } else if (Array.isArray(obj)) {
    return obj.map(fixPaths);
  } else if (obj && typeof obj === 'object') {
    const fixed = {};
    for (const key in obj) {
      fixed[key] = fixPaths(obj[key]);
    }
    return fixed;
  }
  return obj;
}

// –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –ø—É—Ç–∏
const fixedModels = fixPaths(models);

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
fs.writeFileSync(modelsPath, JSON.stringify(fixedModels, null, 2));

console.log('‚úÖ –í—Å–µ –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
console.log(`üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${models.length} –º–æ–¥–µ–ª–µ–π`);
